version: "3.9"

services:
  db:
    image: postgres
    container_name: auth_db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=interview
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - authnetwork
    ports:
      - "5431:5432"
  backend:
    build:
      context: .
      dockerfile: AuthDockerfile
    container_name: auth_backend
    volumes:
      - .:/usr/src/app/
      - ./static/:/usr/src/app/static/
    environment:
      - POSTGRES_NAME=interview
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 8000
    depends_on:
      - db
    links:
      - db:db
    networks:
      - authnetwork
    restart: always
  nginx:
    image: nginx:latest
    container_name: auth_nginx
    ports:
      - "81:80"
    volumes:
      - ./static/:/static/
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - backend
    networks:
      - authnetwork
  grpc_server:
    build:
      context: .
      dockerfile: GrpcDockerfile
    container_name: auth_grpc_server
    volumes:
    - .:/usr/src/app/
    environment:
      - POSTGRES_NAME=interview
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 50051
    depends_on:
      - db
    networks:
      - authnetwork
    restart: always

networks:
  authnetwork:
    driver: bridge